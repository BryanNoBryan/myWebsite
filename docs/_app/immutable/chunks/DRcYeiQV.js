import"./DsnmJJEf.js";import"./BUwabaiJ.js";import{f as v,a1 as A,s as e,c as a,t as R,a as k,b as l,a2 as N}from"./TpHHFT-8.js";import{h as E}from"./BYpuDceu.js";import{s as t}from"./0gT6S2XD.js";import{b as i}from"./DpbtlO4N.js";var P=v(`<p><img alt="Plane Image"/></p> <h3 align="center">Arduino Based Plane and Controller</h3> <hr/> <p align="center">A concept build to create an full-sized, arduino-based plane and transmitter than in theory is the cheapest method, yet is a great learning project. <br/></p> <h2>üìù Table of Contents</h2> <ul><li><a href="#goal">Goal</a></li> <li><a href="#limitations">Dependencies / Limitations</a></li> <li><a href="#design">Design</a></li> <li><a href="#Materials/Supplies">Materials/Supplies</a></li> <li><a href="#Build">Build</a></li> <li><a href="#usage">Usage</a></li> <li><a href="../CONTRIBUTING.md">Contributing</a></li> <li><a href="#authors">Authors</a></li> <li><a href="#acknowledgments">Acknowledgments</a></li> <li><a href="#Debugging">Debugging</a></li></ul> <h2>üßê Problem Statement <a name="goal"></a></h2> <p>Create a simple plane with a front motor with ailerons, elevator, rudder, and landing gear.</p> <h2>‚õìÔ∏è Dependencies / Limitations <a name="limitations"></a></h2> <ul><li>Arduinos typically do not have sufficent PWM pins, hence a pca9685 must be used</li> <li>Reciever in the airplane must have soldered parts, to maintain stability</li> <li>Electrical interference: apparently the BEC in my 40A ESC could not handle the load spikes of with the servos, even if I used the NRF24l01 breakout board adapter which has a AMS1117-3.3.</li> <li><ul><li>Thus I opted to use the 3.3v line directly off the arduino with an additional 22uF electrolytic capacitor directly soldered onto the NRF24l01 3.3v and GND lines.</li></ul></li></ul> <h2>üí° Design <a name="design"></a></h2> <p>Reciever <img alt="reciever"/></p> <p>Controller <img alt="controller"/></p> <p>Data structure:</p> <pre class="language-undefined"><!></pre> <h2>üèÅ Materials/Supplies <a name="Materials/Supplies"></a></h2> <p>Physical:</p> <ul><li>Minimum 6 Dollar Tree foam boards</li> <li>Control rods and horns (do NOT cheap out)</li> <li>Hot Glue</li> <li>Packing Tape</li> <li>Mounting Tape</li> <li>Rubber Bands</li> <li>Popsicle Sticks</li> <li>PVC cards or other sturdy flat materials</li> <li>Landing gear (DO NOT CHEAP OUT, I REPEAT, DO NOT CHEAP OUT)</li> <li>tools, etc.</li></ul> <p>Electrical:</p> <ul><li>2x Arduino Nano</li> <li>Various wires and PWM 3-pin wires</li> <li>Wire Stripper</li> <li>5x 22uF electrolytic capacitor (ceramic also works)</li></ul> <p>Transmitter:</p> <ul><li>9x AA battery holder</li> <li>2x joystick</li> <li>NRF24l01+PA+LNA + breakout board adapter</li> <li>Breadboard</li></ul> <p>Reciever:</p> <ul><li>Soldering Iron and stand</li> <li>Perf boards</li> <li>NRF24l01+PA+LNA</li> <li>PCA9685</li> <li>40A ESC and 2200KV Brushless motor</li> <li>4x 9g servo</li> <li>3s Lipo battery (and charger)</li></ul> <h3>Prerequisites</h3> <ul><li>Arduino Programming</li> <li>Electronics knowledge up to knowing how to use bypass/decoupling capacitors</li> <li>Having fun</li></ul> <h2>‚õèÔ∏è Build <a name="Build"></a></h2> <p>Transmitter:
Build any way you like, just feed the battery power directly into the NRF24l01+ adapter and get it to send out the data struct.</p> <p>Plane:
Huge Credits to: Experimental Airlines</p> <ul><li><a href="https://www.youtube.com/watch?v=karr67ZYho4" rel="nofollow">Wings</a>: <a href="https://www.youtube.com/watch?v=karr67ZYho4" rel="nofollow">https://www.youtube.com/watch?v=karr67ZYho4</a> check out his other videos for further details</li> <li><a href="https://www.youtube.com/watch?v=Xafg-o83L94" rel="nofollow">Fuselage</a>: <a href="https://www.youtube.com/watch?v=Xafg-o83L94" rel="nofollow">https://www.youtube.com/watch?v=Xafg-o83L94</a></li> <li><a href="https://www.youtube.com/watch?v=e1_pjhQWj98" rel="nofollow">Control Surfaces</a>: <a href="https://www.youtube.com/watch?v=e1_pjhQWj98" rel="nofollow">https://www.youtube.com/watch?v=e1_pjhQWj98</a></li> <li><a href="https://www.youtube.com/watch?v=YYhMjc6tNQ4" rel="nofollow">Stabilizers</a>: <a href="https://www.youtube.com/watch?v=YYhMjc6tNQ4" rel="nofollow">https://www.youtube.com/watch?v=YYhMjc6tNQ4</a></li> <li><a href="https://www.youtube.com/watch?v=RpIdJX5Jagw" rel="nofollow">Control Horns</a>: <a href="https://www.youtube.com/watch?v=RpIdJX5Jagw" rel="nofollow">https://www.youtube.com/watch?v=RpIdJX5Jagw</a></li> <li><a href="https://www.youtube.com/watch?v=4zaX5wLmI2U" rel="nofollow">Hatches</a>: <a href="https://www.youtube.com/watch?v=4zaX5wLmI2U" rel="nofollow">https://www.youtube.com/watch?v=4zaX5wLmI2U</a></li> <li>Wing Alignment tuning:
Line 93 <img alt="reciever"/></li></ul> <p>Reciever:
Solder together and secure with rope or velcro. <img alt="reciever"/></p> <h2>üéà Usage <a name="usage"></a></h2> <p>Left joystick y-axis is throttle<br/> Left joystick x-axis is rudder (disabled for now)<br/> Right joystick x-axis is aileron control<br/> Right joystick y-axis is elevator control<br/></p> <br/> Press both at the same time to initiate startup sequence, press both again to pause throttle <br/> <br/> <p>LEARN HOW TO FLY A PLANE, THERE IS NO FLIGHT CONTROL SOFTWARE NOR GYROSCOPE/ACCELEROMETER</p> <ul><li><a href="https://www.geo-fs.com/" rel="nofollow">Flight Game</a>: <a href="https://www.geo-fs.com/" rel="nofollow">https://www.geo-fs.com/</a></li></ul> <h2>‚úçÔ∏è Authors <a name="authors"></a></h2> <ul><li><a href="https://github.com/BryanNoBryan" rel="nofollow">@BryanNoBryan</a> - Idea & Work</li></ul> <h2>üéâ Acknowledgments <a name="acknowledgments"></a></h2> <p>Huge Credits to: Experimental Airlines</p> <h2>üöÄ Debugging <a name="Debugging"></a></h2> <ul><li>If you have an ‚Äúoff-brand‚Äù arduino, you may need to select ‚Äúold bootloader‚Äù in Arduino IDE</li> <li>For any reason, if you cannot upload code, open the serial monitor to 1200 baud (trust me, it helps)</li></ul>`,1);function I(w){var u=P(),o=A(u),d=a(o);l(o);var r=e(o,22),m=e(a(r));l(r);var n=e(r,2),g=e(a(n));l(n);var s=e(n,4),f=a(s);E(f,()=>`<code class="language-undefined">struct Data_Pack &#123;
  byte leftx;
  byte lefty;
  bool leftb;
  byte rightx;
  byte righty;
  bool rightb;
&#125;</code>`),l(s);var h=e(s,30),p=e(a(h),12),b=e(a(p));l(p),l(h);var c=e(h,2),y=e(a(c));l(c),N(26),R(()=>{t(d,"src",`${i??""}/images/plane/old_plane_master.jpg`),t(m,"src",`${i??""}/images/plane/plane_reciever1.jpg`),t(g,"src",`${i??""}/images/plane/plane_controller.jpg`),t(b,"src",`${i??""}/images/plane/wing_tuning.jpg`),t(y,"src",`${i??""}/images/plane/reciever.jpg`)}),k(w,u)}export{I as default};
